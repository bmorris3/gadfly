[build-system]
requires = [
  "setuptools",
  "setuptools_scm[toml]",
  "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "gadfly"
description = "tellar oscillations and granulation"
requires-python = ">=3.11"
readme = { file = "README.rst", content-type = "text/x-rst" }
license = { file = "licenses/LICENSE.rst", content-type = "text/plain" }
authors = [
  { name = "Brett M. Morris", email = "morrisbrettm@gmail.com" },
]
dependencies = [
    "numpy<2",  # until lightkurve fixes are available
    "celerite2",
    "astropy",
    "matplotlib",
    "scipy",
    "lightkurve",
    "tynt",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov",
]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "sphinx-book-theme>=0.3.3",
    "numpydoc",
]

[project.urls]
repository = "https://github.com/bmorris3/gadfly"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]

[tool.setuptools_scm]
write_to = "gadfly/version.py"

[tool.pytest.ini_options]
testpaths = "gadfly"
#filterwarnings = [
#]

[tool.coverage.run]
omit = [
 "gadfly/__init*",
 "gadfly/conftest.py",
 "gadfly/*setup_package*",
 "gadfly/tests/*",
 "gadfly/*/tests/*",
 "gadfly/extern/*",
 "gadfly/version*",
 "*/gadfly/__init*",
 "*/gadfly/conftest.py",
 "*/gadfly/*setup_package*",
 "*/gadfly/tests/*",
 "*/gadfly/*/tests/*",
 "*/gadfly/extern/*",
 "*/gadfly/version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]
